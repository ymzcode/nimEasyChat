<template>
	<view class="im-flex-column im-bg-grey-1 im-flex-1">
		<!-- 顶部导航栏 -->
		<nim-chat-navigation>
			<view class="im-flex-column im-align-center">
				<view class="im-flex im-flex-nowrap im-align-center">
					<text class="im-font-38 im-font-black-2">聊天详情</text>
				</view>
			</view>
		</nim-chat-navigation>
		
		<list :show-scrollbar="false">
			<cell>
				<!-- 单聊展示框 -->
				<template v-if="scene === 'p2p'">
					<view class="im-flex im-align-center im-bg-white im-py-4 im-px-3">
						<view class="im-flex-column im-align-center">
							<nim-avatar :account="to" style="height: 72rpx;width: 72rpx;"></nim-avatar>
							<text class="im-font-28 im-font-light im-mt-2">{{ detailInfo.nick }}</text>
						</view>
						<view class="im-flex-column im-align-center im-ml-3" @tap="createTeam">
							<image src="/static/easy-chat/details/create-team@2x.png" mode="aspectFill" style="width: 72rpx;height: 72rpx;"></image>
							<text class="im-font-28 im-font-light im-mt-2">创建群聊</text>
						</view>
					</view>
				</template>
			</cell>
			
			<cell>
				<!-- 群聊展示框 -->
				<template v-if="scene === 'team'">
					<view class="im-flex-column im-bg-white im-align-center im-justify-center im-pt-2 im-pb-4">
						<team-avatar :teamId="to" class="im-round-2" style="width: 144rpx;height: 144rpx;"></team-avatar>
						<text class="im-text-ellipsis im-font-32 im-font-black im-mt-3 im-pb-3 im-text-center" style="width: 500rpx;">{{ detailInfo.name }}</text>
					</view>
					
					<nim-team-member :detailInfo="detailInfo" @addMember="addMember"></nim-team-member>
					
				</template>
			</cell>
			
			
			<cell>
				<!-- 查找聊天内容 -->
				<nim-search-history></nim-search-history>
			</cell>
			
			<cell>
				<!-- 设置扩展项 -->
				<view class="im-flex-column im-bg-white im-mt-3 im-px-3">
					<view class="im-flex im-align-center im-justify-between im-border-bottom im-py-3">
						<text class="im-font-32 im-font-black">名称</text>
						<text class="im-font-25 im-font-light im-text-right im-text-ellipsis" style="width: 400rpx;">{{ detailInfo.nick || detailInfo.name }}</text>
					</view>
					
					<view class="im-flex im-align-center im-justify-between im-py-3">
						<text class="im-font-32 im-font-black">置顶聊天</text>
						<switch :checked="isTop" color="#00BCAB" @change="isTopChange" />
					</view>
					
				</view>
			</cell>
			
			
			<cell v-if="scene === 'team'">
				<!-- 退群 解散群 按钮 -->
				<view  class="im-flex-column im-bg-white im-mt-3" hover-class="im-bg-grey-3">
					<view class="im-flex im-align-center im-justify-center im-py-3" @tap="clickTeamQuit">
						<text class="im-font-30 im-font-red-2">{{ isOwner ? '解散群聊' : '退出群聊' }}</text>
					</view>
				</view>
				
			</cell>
			
			<cell class="im-list-bottom"></cell>
			
		</list>
		
		<nim-popup-bottom v-model="teamQuitPopup.show" :explainText="teamQuitPopup.explainText">
			<view class="im-bg-white im-flex im-justify-center im-align-center im-py-2" hover-class="im-bg-grey-3" @tap="teamQuit">
				<text class="im-font-32 im-font-red-2">{{ isOwner ? '解散' : '退出' }}</text>
			</view>
		</nim-popup-bottom>
		
	</view>
</template>

<script>
	import nimAvatar from '@/components/easy-chat/nim-avatar.vue'
	import teamAvatar from '@/components/easy-chat/team-avatar.vue'
	import nimSearchHistory from '@/components/easy-chat/nim-search-history.vue'
	import nimTeamMember from '@/components/easy-chat/nim-team-member.vue'
	import nimPopupBottom from '@/components/easy-chat/nim-popup-bottom.vue'
	import nimChatNavigation from '@/components/easy-chat/nim-chat-navigation.vue'
	
	export default {
		data() {
			return {
				scene: '',
				to: '',
				// 判断当前会话是否置顶
				isTop: false,
				teamQuitPopup: {
					show: false,
					explainText: ''
				}
			}
		},
		components: {
			nimAvatar,
			teamAvatar,
			nimSearchHistory,
			nimTeamMember,
			nimPopupBottom,
			nimChatNavigation
		},
		computed: {
			userUID() {
				return this.$store.getters['initNim/userUID']
			},
			// 当前会话的id
			currentSessionId() {
				return this.$store.getters['initNim/currentSessionId']
			},
			// 用户对象数据结构
			userObj() {
				return this.$store.getters['initNim/userObj'] || {}
			},
			teamObj() {
				return this.$store.getters['initNim/teamObj'] || {}
			},
			// 当前用户或者群的详细信息
			detailInfo() {
				if (this.scene === 'p2p' && this.userObj[this.to]) {
					return this.userObj[this.to]
				} else if (this.scene === 'team' && this.teamObj[this.to]) {
					return this.teamObj[this.to]
				}
			},
			// 判断自己是否是群主
			isOwner() {
				console.log(this.userUID);
				if (this.detailInfo.owner === this.userUID) {
					return true
				}
				return false
			}
		},
		onLoad() {
			if (this.currentSessionId) {
				this.scene = this.currentSessionId.split('-')[0];
				this.to = this.currentSessionId.split('-')[1];
			}
		},
		methods: {
			addMember() {
				uni.navigateTo({
					url: '/pages/contacts/select?teamId=' + this.to
				})
			},
			createTeam() {
				console.log('创建群聊');
			},
			teamQuit() {
				console.log('退出');
				if (this.isOwner) {
					// 解散群
					this.$store.dispatch('initNim/nimDismissTeam', {
						teamId: this.detailInfo.teamId
					})
				} else {
					// 退出群
					this.$store.dispatch('initNim/nimLeaveTeam', {
						teamId: this.detailInfo.teamId
					})
				}
				
				this.teamQuitPopup.show = false
			},
			isTopChange(e) {
				// console.log(e);
				this.isTop = e.detail.value
				this.isTop ? this.$store.dispatch('initNim/nimAddStickTopSession', {
					id: this.currentSessionId,
					// 会话置顶的扩展字段
					topCustom: ''
				}) : this.$store.dispatch('initNim/nimDeleteStickTopSession', {
					id: this.currentSessionId
				})
			},
			clickTeamQuit() {
				this.teamQuitPopup.show = true
				this.teamQuitPopup.explainText = this.isOwner ? '你将解散群聊, 解散群聊后此群所有人将自动退出' : '你将退出群聊, 退出群聊后将不再接受此群的消息'
			},
			
		}
	}
</script>

<style>

</style>
